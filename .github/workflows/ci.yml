name: CI
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches: main
    paths-ignore: '**/*.md'
  pull_request:
    branches: main
    paths-ignore: '**/*.md'
jobs:
  ci:
    name: ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: build-and-test
            os: ubuntu-24.04
            timeout-minutes: 30
            build: --parallel
          - name: build-and-test
            os: macos-14
            timeout-minutes: 30
            build: --parallel
          - name: build-and-test
            os: windows-2022
            timeout-minutes: 30
            build: --parallel
          - name: clang-tidy
            os: ubuntu-24.04
            timeout-minutes: 60
            configure: "-DSTARTERPP_CLANG_TIDY=ON"
          - name: address-and-undefined-sanitizer
            os: ubuntu-24.04
            timeout-minutes: 120
            configure: >
              -DCMAKE_C_COMPILER=clang
              -DCMAKE_CXX_COMPILER=clang++ 
              -DCMAKE_CXX_FLAGS="-fsanitize=address,undefined"
              -DCMAKE_EXE_LINKER_FLAGS="-fsanitize=address,undefined"
            build: --parallel
          - name: leak-sanitizer
            os: ubuntu-24.04
            timeout-minutes: 120
            configure: >
              -DCMAKE_C_COMPILER=clang
              -DCMAKE_CXX_COMPILER=clang++ 
              -DCMAKE_CXX_FLAGS="-fsanitize=leak"
              -DCMAKE_EXE_LINKER_FLAGS="-fsanitize=leak"
            build: --parallel
          - name: thread-sanitizer
            os: ubuntu-24.04
            timeout-minutes: 120
            configure: >
              -DCMAKE_C_COMPILER=clang
              -DCMAKE_CXX_COMPILER=clang++ 
              -DCMAKE_CXX_FLAGS="-fsanitize=thread -O1"
            build: --parallel
          - name: memory-sanitizer
            os: ubuntu-24.04
            timeout-minutes: 120
            configure: >
              -DCMAKE_C_COMPILER=clang 
              -DCMAKE_CXX_COMPILER=clang++ 
              -DCMAKE_CXX_FLAGS="-fsanitize=memory -fno-optimize-sibling-calls -O1" 
              -DCMAKE_EXE_LINKER_FLAGS="-fsanitize=memory" 
            build: --parallel
            test: '-L "msan"'
    runs-on: ${{ matrix.os }}
    timeout-minutes: ${{ matrix.timeout-minutes || 30 }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Log c++ --version
        run: c++ --version
      - name: Configure
        run: cmake -B build -DCMAKE_BUILD_TYPE=Debug ${{ matrix.configure || '' }}
      - name: Build
        run: cmake --build build --config Debug --verbose ${{ matrix.build || '' }}
      - name: Test
        run: ctest --test-dir build/test --output-on-failure -V ${{ matrix.test || '' }}
